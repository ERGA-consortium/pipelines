import os
import glob
import sys

configfile: "config.yaml"

prefix=config["prefix"]
ploidy=config["ploidy"]
k=config["kmersize"]
maxC=config["MaxCov"]

def get_L_U(wildcards):
	with open(prefix+"_limits_L_U.txt") as f:
		L, U = f.read().strip().split("\t")
	return L, U

rule all:
	input:
		"Estimated_genome_size",
		prefix+"_smudgeplot.OK"

rule read_files_list:
	output:
		prefix+".list"
	run:
		read_files = config["READ_FILES"].values()
		with open(output[0], "w") as out_file:
			for read_file in read_files:
				out_file.write(f"{read_file}\n")

rule count_kmers:
	input:
		prefix+".list"
	output:
		prefix+".kmc_pre",
		prefix+".kmc_suf"
	conda:
		"kmc_smudge_pairs"
	threads:
		3
	shell:
		"""
		rm -rf {prefix}.tmp
		mkdir -p {prefix}.tmp
		kmc \
			-k{k} -t{threads} -m10 \
			-ci1 -cs{maxC} \
			@{prefix}".list" {prefix} {prefix}.tmp
		rm -rf {prefix}.tmp
		"""

rule create_hist:
	input:
		prefix+".kmc_pre",
		prefix+".kmc_suf"
	output:
		prefix+".hist"
	conda:
		"kmc_smudge_pairs"
	shell:
		"kmc_tools transform {prefix} histogram {prefix}'.hist' -cx{maxC}"

rule run_genomescope:
	input:
		prefix+".hist"
	output:
		directory(prefix+"_genomescope")
	conda:
		"genoplots"
	shell:
		"genomescope2 -i {input} -p {ploidy} -k {k} -o {output} -m {maxC}"

rule get_genomescopeStats:
	input:
		prefix+"_genomescope"
	output:
		"Estimated_genome_size"
	shell:
		"bash get_stats.sh {input}"

rule find_limits_L_U:
	input:
		prefix+".hist"
	output:
		prefix+"_limits_L_U.txt"
	conda:
		"genoplots"
	shell:
		"""
		L=$(smudgeplot.py cutoff {prefix}".hist" L)
		U=$(smudgeplot.py cutoff {prefix}".hist" U)
		echo -e "${{L}}\t${{U}}" > {output}
		"""

rule prepare_kmersSmudge:
	input:
		prefix+"_limits_L_U.txt"
	output:
		prefix+"_reduce.OK"
	conda:
		"kmc_smudge_pairs"
	shell:
		"""
		L=$(cut -f1 {input})
		U=$(cut -f2 {input})
		kmc_tools \
			transform {prefix} -ci${{L}} -cx${{U}} \
			reduce {prefix}_L${{L}}_U${{U}} && touch {prefix}"_reduce.OK"
		"""

rule run_smudge_pairs:
	input:
		prefix+"_limits_L_U.txt",
		prefix+"_reduce.OK"
	output:
		prefix+"_coverages.OK"
	conda:
		"kmc_smudge_pairs"
	shell:
		"""
		L=$(cut -f1 {input[0]})
		U=$(cut -f2 {input[0]})
		smudge_pairs \
			{prefix}_L${{L}}_U${{U}} \
			{prefix}_L${{L}}_U${{U}}_coverages.tsv \
			{prefix}_L${{L}}_U${{U}}_pairs.tsv \
			> {prefix}_L${{L}}_U${{U}}_familysizes.tsv && touch {prefix}"_coverages.OK"
		"""

rule create_smudgeplot:
	input:
		prefix+"_limits_L_U.txt",
		prefix+"_coverages.OK"
	output:
		prefix+"_smudgeplot.OK"
	conda:
		"genoplots"
	shell:
		"""
		L=$(cut -f1 {input[0]})
		U=$(cut -f2 {input[0]})
		smudgeplot_plot.R \
			-L ${{L}} \
			-i {prefix}_L${{L}}_U${{U}}_coverages.tsv \
			-o {prefix}_L${{L}}_U${{U}} && touch {prefix}"_smudgeplot.OK"
		"""
