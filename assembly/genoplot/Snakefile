import os
import glob
import sys

configfile: "config.yaml"

output_meryl=config["prefix"]+".meryl"

prefix=config["prefix"]
ploidy=config["ploidy"]
k=config["kmersize"]
L=config["Lbound"]
U=config["Ubound"]

def get_reads(wildcards):
	return config["READ_FILES"][wildcards.read_file]

rule all:
	input:
		config["prefix"]+"_genomescope"

rule count_kmers:
	input:
		reads=get_reads
	output:
		directory("{read_file}.meryl")
	conda:
		"meryl"
	threads:
		3
	shell:
		"meryl count k={k} memory=10G threads={threads} {input.reads} output {output}"

rule merge_kmers:
	input:
		expand("{read_file}.meryl", read_file=config["READ_FILES"])
	output:
		directory(output_meryl)
	conda:
		"meryl"
	threads:
		6
	shell:
		"meryl union-sum memory=10G threads={threads} output {output} {input}"

rule create_hist:
	input:
		output_meryl
	output:
		config["prefix"]+".hist"
	conda:
		"meryl"
	threads:
		1
	shell:
		"meryl histogram {input} > {output}"

rule run_genomescope:
	input:
		config["prefix"]+".hist"
	output:
		directory(config["prefix"]+"_genomescope")
	conda:
		"genomescope2"
	threads:
		1
	shell:
		"genomescope2 -i {input} -p {ploidy} -k {k} -o {output}"
"""
rule prepare_kmersSmudge:
	input:
		output_meryl
	output:
		config["prefix"]+"L"+{L}+"_U"+{U}+".kmers"
	conda:
		"meryl"
	threads:
		6
	shell:
		meryl print less-than 1500 greater-than 10 threads={threads} memory=10G test.meryl > L10_U1500.meryl

rule run_smudgeplot:
	input:
		config["prefix"]+"L"+{L}+"_U"+{U}+".kmers"
	output:
		{L}10_{U}1500
	conda:
		"smudgeplot"
	threads:
		1
	shell:
		"smudgeplot.py hetkmers -o {L}10_{U}1500 < L{L}_U{U}.meryl"
"""
